{"version":3,"sources":["components/ToDoList.js","components/ToDoForm.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","useState","isDone","setIsDone","className","style","textDecoration","onClick","prev","value","e","preventDefault","deleteItem","id","ToDoForm","toDos","setToDos","toDo","setToDo","prevItems","filter","item","index","type","placeholder","name","onChange","target","autoComplete","event","length","alert","map","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA6BeA,EA1BE,SAACC,GAAU,IAAD,EAEEC,oBAAS,GAFX,mBAEhBC,EAFgB,KAETC,EAFS,KAUvB,OACI,sBAAKC,UAAU,OAAf,UACY,qBAAKA,UAAU,OAAOC,MACtB,CAAEC,eAAeJ,EAAO,eAAe,QAASK,QAThE,WACIJ,GAAU,SAACK,GACP,OAAQA,MAMA,SAEKR,EAAMS,QAGP,wBAAQL,UAAU,MACtBG,QAAS,SAACG,GACNA,EAAEC,iBACFX,EAAMY,WAAWZ,EAAMa,KAHvB,SAID,cAAC,IAAD,U,iBCuCRC,EA3DE,WAAO,IAAD,EAEKb,mBAAS,IAFd,mBAEZc,EAFY,KAENC,EAFM,OAGIf,mBAAS,IAHb,mBAGZgB,EAHY,KAGNC,EAHM,KAKnB,SAASN,EAAWC,GAChBG,GAAS,SAACG,GACN,OAAOA,EAAUC,QAAO,SAACC,EAAKC,GAC1B,OAAOA,IAAST,QAsB5B,OACI,qBAAKT,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACA,sBAAKA,UAAU,SAAf,UACA,2CAEA,uBAAMA,UAAU,eAAhB,UACI,uBAAOmB,KAAK,OAAOC,YAAY,gBAC/BC,KAAK,OAAOhB,MAAOQ,EAAMS,SAzBrC,SAAsBhB,GAClBQ,EAAQR,EAAEiB,OAAOlB,QAyBLmB,aAAa,QAEjB,wBAAQrB,QAAS,SAACsB,GAxB9B,IAAkBpB,EAwBqBoB,EAAMlB,iBAvBtB,KADLF,EAwBsDQ,GAvB1Da,OACNC,MAAM,6BAENf,GAAS,SAACR,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAiBC,OAMzBS,EAAQ,KAaA,SACA,cAAC,IAAD,YAKJ,qBAAKd,UAAU,YAAf,SACKW,EAAMiB,KAAI,SAACC,EAASX,GAAV,OACN,cAAC,EAAD,CAAUb,MAAOwB,EAAqBpB,GAAIS,EAC1CV,WAAYA,GADmBU,cCxCrCY,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,OCIS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1005cd4f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst ToDoList = (props) =>{\r\n\r\n    const [isDone,setIsDone]=useState(false)\r\n\r\n    function handleClick(){\r\n        setIsDone((prev)=>{\r\n            return !prev\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"list\">\r\n                    <div className=\"item\" style={\r\n                    { textDecoration:isDone?\"line-through\":\"none\"}} onClick={handleClick}>\r\n                        {props.value}\r\n               \r\n                    </div>\r\n                        <button className=\"btn\"\r\n                    onClick={(e)=>{\r\n                        e.preventDefault();\r\n                        props.deleteItem(props.id)\r\n                    }}><DeleteIcon /></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import React,{useState} from \"react\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\n\r\nconst ToDoForm = () => {\r\n\r\n    const [toDos,setToDos] =useState([])\r\n    const [toDo, setToDo]= useState('')\r\n\r\n    function deleteItem(id){\r\n        setToDos((prevItems)=>{\r\n            return prevItems.filter((item,index)=>{\r\n                return index !==id\r\n            })\r\n        })\r\n    }\r\n    \r\n    function handleChange(e){\r\n        setToDo(e.target.value)\r\n    }\r\n    \r\n    function saveTodo(value){\r\n        if (value.length===0){\r\n            alert(\"please enter a valid task\")\r\n        }else{\r\n            setToDos((prev)=>{\r\n                return [...prev, value]\r\n            })\r\n        }   \r\n    }\r\n\r\n    function reset(){\r\n        setToDo('')\r\n    }\r\n    return(\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n            <div className=\"header\">\r\n            <h1>ToDo List</h1>\r\n            \r\n            <form className=\"form-content\">\r\n                <input type=\"text\" placeholder=\"Add ToDo item\" \r\n                name=\"item\" value={toDo} onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <button onClick={(event)=>{event.preventDefault(); saveTodo(toDo); reset() }} >\r\n                <AddRoundedIcon />\r\n                </button>\r\n                \r\n            </form>\r\n            </div>\r\n            <div className=\"todo-list\">\r\n                {toDos.map((element, index)=>\r\n                     <ToDoList value={element} key={index} id={index}\r\n                     deleteItem={deleteItem}\r\n              />\r\n                )}\r\n                </div> \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoForm;","///import './App.css';\nimport \"./Test.css\";\n\nimport ToDoForm from './components/ToDoForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}